What's the Javascript equivalent to nil?	undefined
How would you print out two things with JavaScript?	"console.log(""thing one"", ""thing two"")"
What does Ruby and Javascript output for the following?<div><br /></div><div>10/3</div>	Ruby: 3<div><br /></div><div>Javascript: 3.33333333</div>
How would you get a random number with Javascript? How would you round that number down?	Math.random()<div><br /></div><div>Gives you a number between 0 and 1.</div><div><br /></div><div>Math.random() * 50</div><div><br /></div><div>Gives you a random number between 0 and 50 with decimals.</div><div><br /></div><div>Math.floor(Math.random() * 50)</div><div><br /></div><div>Give you a random number between 0 and 50 rounded down.</div>
How do you comment out a line in Javascript?	With double forward slash marks.<div><br /></div><div>// This is a comment</div>
How do you do a multi-line comment in Javascript?	/*<div><br /></div><div>this is a</div><div>multi line comment</div><div><br /></div><div>*/</div>
"How would you change the value of the following Javascript variable?<div><br /></div><div>var weather = ""Sunny"";</div>"	"weather = ""Cloudly"";<div><br /></div><div>// Of note here is that you don't need to say var again. That's only for initially declaring the variable.</div>"
What is string interpolation for Javascript?	"var myName = ""Chase Armstrong"";<div>console.log(""Hello my name is "" + myName + ""."")</div>"
How is if else control flow in Javascript?	if (someVariable) {<div>&nbsp; &nbsp;// something here</div><div>} else {</div><div>&nbsp; &nbsp;// something here</div><div>}</div>
How do you do comparison (equal) with Javascript?	===&nbsp;<div><br /></div><div>or&nbsp;</div><div><br /></div><div>!==</div>
How do you do an else if statement in Ruby? How about Javascript?	Javascript<div><br /></div><div>else if (someTest)</div><div><br /></div><div>Ruby</div><div><br /></div><div>elsif some_test</div>
What is the syntax for a switch statement in Javascript?	"<div>var color = ""red"";</div><div><br /></div>switch (color) {<div>&nbsp; &nbsp;case ""blue"":</div><div>&nbsp; &nbsp; &nbsp; console.log(""Really, blue?"");</div><div>&nbsp; &nbsp; &nbsp; break;</div><div>&nbsp; &nbsp;case ""red"":</div><div>&nbsp; &nbsp; &nbsp; console.log(""Nice, red."");</div><div>&nbsp; &nbsp; &nbsp; break;</div><div>&nbsp; &nbsp;default:</div><div>&nbsp; &nbsp; &nbsp; console.log(""Invalid color!"");</div><div>&nbsp; &nbsp; &nbsp; break;</div><div>}</div>"
What's a synonym for calling the function in Javascript?	Running the function. The best way to remember it is you call a function and it answers. It does something.
What's the syntax for writing a Javascript function?	"function writeName(name) {<div>&nbsp; &nbsp;console.log(""Your name is: "", name);</div><div>}</div>"
How do you call a Javascript function?	"sayMyName(""Chase"");<div><br /></div><div>or</div><div><br /></div><div>getResult();</div>"
What does Javascript do to return a value? How is it different than Ruby?	You have to use the return keyword. Contrast this with Ruby where you can have implicit returns on that last line of a Ruby method.
<div>var hello = 'Hello World';</div><div>console.log(hello[6]);</div><div><br /></div><div>What will the output be?</div>	// W
"How can you get the following array's count?<div><br /></div><div>var myArr = [""me"", ""you"", ""us""];</div>"	myArr.length // 3
What's the Javascript equivalent to the Ruby shovel method?	push<div><br /></div><div>myArr = [1,2,3];</div><div>myArr.push(4,5,6);</div><div>console.log(myArr);</div><div><br /></div><div>// [1,2,3,4,5,6]</div>
What's the syntax for the Javascript for loop?	for (var i = 0; i < someArr.length; i++) {<div>&nbsp; &nbsp;// do something</div><div>}</div>
What's the middle condition of a Javascript for loop?	It's basically saying, keep doing this while this condition is true.
What's the while loop syntax in Javascript?	while (someTest) {<div>&nbsp; &nbsp;// do this</div><div>}</div>
What does a computer language actually do?	It takes the phrases that you use (the language's language) and converts it into ones and zeros that the computer can understand.
Who is source code for?	It's for the developer
What is a binary operator?	An operator that has two different sides (bi)
How can you enter in multiple lines in the developer console without the computer thinking you want the program to run?	shift + enter<div><br /></div><div>Instead of:</div><div><br /></div><div>enter</div>
How would you get input from a user with Javascript?	"var a = prompt(""Message to display"");"
What's the shortcut to add something to a variable and make that equal the new variable.	a += 2<div><br /></div><div>**Of note here is that this is the same thing as Ruby.</div>
How do you convert a number to a string?	a = 2;<div><br /></div><div>a = String(a);</div>
How do you convert a string to a number?	"Number(""42"");"
"What will the following return?<div><br /></div><div>5 + """";</div>"	"""5""<div><br /></div><div>The plus operator acts as a string concatenation method to turn the 5 into a string and combine it with the other empty string.</div>"
What should you use comments for?	A comment doesn't usually say what. It more often says the why or the how.
What are the three ways you can formally declare a variable with ES6?	var a = 42;<div>let b = 2;</div><div>const c = 42;</div>
What are blocks in Javascript?	Same as Ruby. It's code contained inside of two curly brackets.
What are the falsy values in Javascript?	"0<div>-0</div><div>NaN</div><div>""""</div><div>false</div><div>null</div><div>undefined</div>"
What does NaN stand for?	Not A Number.
What does the following do?<div><br /></div><div>a = 6;</div><div>void a;</div><div>console.log(a);</div>	It makes a undefined so the console.log would log undefined.
Which one of these is correct?<div><br /></div><div>for (var a = 5; a < 10; a++) {<div>&nbsp; &nbsp;console.log(a);</div><div>}</div></div><div><br /></div><div>for (a = 5; a < 10; a++) {</div><div>&nbsp; &nbsp;console.log(a);</div><div>}</div>	For whatever reason, they both work just fine.
Increment by one with the shortcut. Minus by one with the shortcut.	++<div><br /></div><div>--</div>
What are each of the three for loop clauses called?<div><br /></div><div>for (var x = 0; x < 10; x++) {</div><div>&nbsp; &nbsp;</div><div>}</div>	1. Initialization Clause<div>2. Test Clause</div><div>3. Update Clause</div>
How do you stop a loop inside of the loop?	break;
What does the following do?<div><br /></div><div>let a = 23;</div><div>a.toFixed( 3 );</div>	It will return a string formated with three decimal places.<div><br /></div><div>23.000</div><div><br /></div><div>**If you run this variable directly on a number, it needs to be in parenthesis like so:</div><div><br /></div><div>(23).toFixed(3);</div>
What's a good practice for declaring variables and functions?	Declaring them at the top of your files.
What is it called when you create function in Javascript? How about when you run it? When do you use arguments and parameters in Javascript?	Declaring a function. Calling a function. It's called a parameter when you are declaring the funciton. It's called an argument when you're calling the function.
How does scope work in Javascript?	We can always access things outside of our current scope but not things that are further down in the scope (i.e. global scope trying to access scope of specific function)
Why would you use const in Javascript?	You would use const and then an uppercase name to raise an error if someone tries to change it. That's a constant. Ex:<div><br /></div><div>const UTAH_TAX_RATE = 0.064;</div>
What do const's require?	They require an immediate assignment. The following is invalid:<div><br /></div><div>const foo;</div>
What can you use to author in ES6 but have your code work on older browsers?	You can create your source code with ES6 syntax and then use babeljs.io/repl/ to change it to code that acts the same but is compatible with older browsers.
"Make a myCoffee object out of the following variables:<div><br /></div><div>var coffeeFlavor = ""espresso"";</div><div>var coffeeTemperature = ""piping hot"";</div><div>var coffeeOunces = 100;</div><div>var coffeeMilk = true;</div>"	"var myCoffee = {<div>&nbsp; &nbsp;flavor: ""espresso"",</div><div>&nbsp; &nbsp;temperature: ""piping hot"",</div><div>&nbsp; &nbsp;ounces: 100,</div><div>&nbsp; &nbsp;milk: true</div><div>};</div><div><br /></div><div>**Of note here is that you have to add that final semicolon.&nbsp;</div>"
"How would we reference something in the following object?<div><br /></div><div>var myInfo = {</div><div>&nbsp; &nbsp;name: ""Chase"",</div><div>&nbsp; &nbsp;age: 24,</div><div>&nbsp; &nbsp;status: ""single""</div><div>}</div>"	myInfo.name
What do you call it in Javascript if you add a function to a hash?	It's called a method.
"Add a method to the following object:<div><br /></div><div>var myInfo = {</div><div>&nbsp; &nbsp;name: ""Chase"",</div><div>&nbsp; &nbsp;age: 24,</div><div>&nbsp; &nbsp;// your code here</div><div>}</div><div><br /></div><div>What's unique about this function? How would you call this function?</div>"	"myInfo = {<div>&nbsp; &nbsp;name: ""Chase"",</div><div>&nbsp; &nbsp;age: 24,</div><div>&nbsp; &nbsp;getName: function() {</div><div>&nbsp; &nbsp; &nbsp; console.log(myInfo.name);</div><div>&nbsp; &nbsp;}</div><div>};</div><div><br /></div><div>What's unique about it is that we don't give it a name. The name, when called, is the key we assigned it to. In this case we would do:</div><div><br /></div><div>myInfo.getName();</div>"
What's the square bracket notation for accessing/setting a value with the key of temperature (object is myDrink)?	"myDrink[""temperature""] = ""lukewarm"";"
What's the syntax for an object contructor? What are some specific naming conventions for this?	"function Person(name, age, status) {<div>&nbsp; &nbsp;this.name = name;</div><div>&nbsp; &nbsp;this.age = age;</div><div>&nbsp; &nbsp;this.status = status;<br /><div><div>}</div></div></div><div><br /></div><div>var chase = new Friend(""Chase"", 24, ""single"");</div><div><br /></div><div>**Of note here is that the object contructor name (in this case Person) is Uppercase and Camel Case.</div>"
What's the javascript equivalent to a Ruby instance? What's the javascript eqiuvalent to a Ruby class?	An instance. A prototype.
What are common web browser objects?	Document<div>Window</div><div>Element</div><div>Event</div><div>Node</div><div>Comment</div><div>Console</div>
jQuery and Angular come with their own core objects.	
"If we've created a script for an HTML page and the script has the following:<div><br /></div><div>function sayHello() {<br />&nbsp; &nbsp;alert(""Hello"");</div><div>}</div><div>sayHello();</div><div><br /></div><div>What would the difference be if we use the following:</div><div><br /></div><div>function sayHello() {<br />&nbsp; &nbsp;window.alert(""Hello"");</div><div>}</div><div>window.sayHello();</div>"	There would be no difference. Our function calls become part of the host object (for browsers this would be Window).
What does the 'this' keyword refer to?	The object of the current scope.
How would you create a Javascript object constructor with a class in ES6?	"class Cat {<div>&nbsp; &nbsp;constructor(name, color) {</div><div>&nbsp; &nbsp; &nbsp; this.name = name,</div><div>&nbsp; &nbsp; &nbsp; this.color = color</div><div>&nbsp; &nbsp;}</div><div><br /></div><div>&nbsp; &nbsp;speak() {</div><div>&nbsp; &nbsp; &nbsp; console.log('Meeoow');</div><div>&nbsp; &nbsp;}<br /><div>}</div></div><div><br /></div><div>**This is very similar to Ruby with initialize and instance methods. To create this object with the above constructor, we would do:</div><div><br /></div><div>var cat = new Cat(""Fluffy"", ""White"");</div><div><br /></div><div>**Also don't forget that this has commas, not semicolons.&nbsp;</div>"
What does the following do?<div><br /></div><div>Object.getOwnPropertyDescriptor(objectName, 'property'))</div>	It returns information about the Object property in question, particularly if it is writable, enumerable, and configurable.
What does the following do?<div><br /></div><div>Object.defineProperty(cat, 'name', {writable: false })</div>	It makes it so that particular property can no longer be changed (i.e. it's not writable)
How would you make an the entire name property read only?<div><br /></div><div>var cat = {</div><div>&nbsp; &nbsp;name: {first: 'Fluffy', last: 'LaBeouf' },</div><div>&nbsp; &nbsp;color: 'White'</div><div>}</div>	Object.freeze(cat.name);
How would you loop over all the properties in an object? What about all the values? Use this object as an example...<div><br /></div><div>var cat = {</div><div>&nbsp; &nbsp;name: 'Fluffy',</div><div>&nbsp; &nbsp;color: 'White'</div><div>}</div>	for (var prop in cat) {<div>&nbsp; &nbsp;console.log(prop)</div><div>end</div><div><br /></div><div>or</div><div><br /></div><div>for (var prop in cat) {</div><div>&nbsp; &nbsp;console.log(cat[prop])</div><div>}</div>
"What does the following do?<div><br /></div><div>cat = {</div><div>&nbsp; &nbsp;name: ""Garfield"",</div><div>&nbsp; &nbsp;age: 3</div><div>}<br /><div><br /></div><div>Object.defineProperty(cat, 'name', {enumerable: false })</div></div>"	It makes it so we won't be able to loop over that particular property. It also makes it so that it doesn't show up in the Object keys.
How do you display an Object's keys? Let's say the object is called cat.	Object.keys(cat)
How would you turn something into a JSON value?	JSON.stringify(object)
What does it mean to serialize an object?	I think it means to convert it to a JSON appropriate value. For example:<div><br /></div><div>JSON.stringify(object);</div>
What does the following do?<div><br /></div><div>Object.defineProperty(cat, 'name', { configurable: false })</div>	It makes it so you can't delete the property. You also can't edit the enumerable property.
Create a getter method for the following object that will display the full name of the cat by typing:<div><br /></div><div>console.log(cat.fullName);</div><div><br /></div><div>Here's the object:</div><div><br /></div><div>var cat = {</div><div>&nbsp; &nbsp;name: { first: 'Fluffy', last: 'LaBeouf' },</div><div>&nbsp; &nbsp;color: 'White'</div><div>}</div>	Object.defineProperty(cat, 'fullName',<div>&nbsp; &nbsp;{</div><div>&nbsp; &nbsp; &nbsp; get: function() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return this.name.first + ' ' + this.name.last</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp;});</div><div><br /></div><div>console.log(cat.fullName);</div>
"How would you create a setter method for the following object so that you could set the first and last name of the object by doing:<div><br /></div><div>cat.fullName = ""Grumpy Cat"";</div><div><br /></div><div>Here's the object:</div><div><br /></div><div>var cat = {</div><div>&nbsp; &nbsp;name: {first: ""Fluffy"", last: ""Labeouf""},</div><div>&nbsp; &nbsp;color: ""White""</div><div>}</div>"	<div>Object.defineProperty(cat, 'fullName',</div><div>&nbsp; &nbsp;{</div><div>&nbsp; &nbsp; &nbsp; set: function(value) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var nameParts = value.split(' ');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;this.name.first = nameParts[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;this.name.last = nameParts[1];</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp;})</div>
What is a prototype in Javascript?	A prototype affects all instances that are created using a particular object contructor. Basically, it creates a preset for all object instances. Take a look at the following:<div><br /></div><div>function Cat(name, color) {</div><div>&nbsp; &nbsp;this.name = name;</div><div>&nbsp; &nbsp;this.color = color;</div><div>}</div><div>Cat.prototype.age = 4</div><div><br /></div><div>var fluffy = new Cat('Fluffy', 'White');</div><div>var muffin = new Cat('Muffin', 'Brown);</div><div><br /></div><div>Both Fluffy's age and Muffin's age will be 4.</div>
How do you add the following method so that you can apply it to all arrays?<div><br /></div><div>arr.last</div>	"Object.defineProperty(Array.prototype, ""last"", { get: function() {<div>&nbsp; &nbsp;return this[this.length - 1];</div><div>}})</div>"
How do you return a function's prototype? What about an object's prototype?	myFunc.prototype<div><br /></div><div>myObj.__proto__</div><div><br /></div><div>**Of note here is that there are two underscores before proto and two underscores after proto</div>
How do you use the hasOwnProperty method?	"myInfo = {<div>&nbsp; &nbsp;name: ""Chase"",</div><div>&nbsp; &nbsp;age: 24</div><div>}</div><div><br /></div><div>myInfo.hasOwnProperty('age') // returns a boolean</div><div>&nbsp; &nbsp;</div>"
How do you make an object constructor inherit from another object constructor (not doing it similar to the Ruby Class way).	Cat.prototype = Object.create(Animal.prototype);<div><br /></div><div>You would also need to add a little piece of code inside the Cat constructor:</div><div><br /></div><div>Animal.call(this)<br /><div><br /></div><div><br /></div></div>
How would you use prototypal inheritance with classes in Javascript?	class Animal {<div>&nbsp; &nbsp;constructor(voice) {</div><div>&nbsp; &nbsp; &nbsp; this.voice = voice || 'grunt';</div><div>&nbsp; &nbsp;}</div><div><br /></div><div>&nbsp; &nbsp;speak() {</div><div>&nbsp; &nbsp; &nbsp; display(this.voice);</div><div>&nbsp; &nbsp;}</div><div>}</div><div><br /></div><div>class Cat extends Animal {</div><div>&nbsp; &nbsp;constructor(name, color) {</div><div>&nbsp; &nbsp; &nbsp; super('Meow');</div><div>&nbsp; &nbsp; &nbsp; this.name = name;</div><div>&nbsp; &nbsp; &nbsp; this.color = color;</div><div>&nbsp; &nbsp;}</div><div>}</div>
Declare multiple variables on the same line in Javascript.	"var name = ""Chase"", age = 24, status = ""single"";"
Get seven to the second power with Javascript.	Math.pow(7,2);
Let's say you have a pyramid like the following:<div><br /></div><div>1</div><div>3 5</div><div>7 9 11</div><div>13 15 17 19</div><div><br /></div><div>What's the easiest way in Javascript to get the sum of any given row?</div>	Math.pow(row, 3);<div><br /></div><div>It's very interesting that it works that way.</div>
What's the equivalent of Ruby's select method?	Filter.<div><br /></div><div>Basically it filters out anything that doens't come out as true for the logic we pass in. For example:</div><div><br /></div><div>var age = [14, 23, 24, 56];</div><div>aboveEighteen = age.filter(n => n >= 18 );</div><div><br /></div><div>What's cool though is we can actually also pass a function with one parameter and it will automatically pass in the correct value as it loops over the array. For example:</div><div><br /></div><div>var ages = [14, 23, 24, 56];</div><div>function aboveEighteen(age) {</div><div>&nbsp; &nbsp;age >= 18;</div><div>}</div><div>thoseAboveEighteen = ages.filter(aboveEighteen);</div>
How could you compare these two arrays and make them equal even though their values are in different orders?<div><br /></div><div>[1,2,3,4] == [2,1,4,3]</div><div># as is will return false</div>	require 'set'<div>[1,2,3,4].to_set == [2,1,4,3].to_set</div><div># returns true</div>
What's the difference between parseInt(str) and Number(str)?	"The difference is parseInt will parse up until the first non-number and convert that value to a number. Number will not do that. For example:<div><br /></div><div>parseInt(""123abc"") // 123</div><div>Number(""123abc"") // NaN</div>"
What's another way to do the (n=> n * n) part of the following (think anonymous function):<div><br /></div><div><div>function squareDigits(num){</div><div>&nbsp; return String(num).split('').map(n=> n * n );</div><div>}</div></div>	function squareDigits(num){<div>&nbsp; &nbsp;return String(num).split('').map(function(n) { return n * n; });</div><div>}</div>
"What happens when you multiply the following two strings in Javascript?<div><br /></div><div>""5"" * ""5""</div>"	It returns the number 25 because I guess Javascript will convert it for you in this case.
What's the syntax for the reduce method? What does each thing represent?	arr.reduce((a,b)=> a + b, 0);<div><br /></div><div>/*</div><div>a represents the first value of each iteration</div><div>b represent the second value</div><div>a + b represents what will be returned if it's the last</div><div>iteration or what the next a value will be if not</div><div>0 is the initial value</div><div>*/</div>
Add a function to the following prototype:<div><br /></div><div>NBAPlayer</div>	NBAPlayer.prototype.dunk = function() {<div><br /></div><div>// something inside of here</div><div><br /></div><div>}</div>
"Make the following code better:<div><br /></div><div>function NBAPlayer(name, team, pos) {</div><div>&nbsp; &nbsp;this.name = name;</div><div>&nbsp; &nbsp;this.team = team;</div><div>&nbsp; &nbsp;this.pos = pos;</div><div>&nbsp; &nbsp;this.dunk = function() {</div><div>&nbsp; &nbsp; &nbsp; console.log(""I'm dunking"");</div><div>&nbsp; &nbsp;}</div><div>}</div>"	"Put the method that will be used in every instance on the prototype:<div><br /></div><div>NBAPlayer.prototype.dunk = function() {</div><div>&nbsp; &nbsp;console.log(""I'm dunking"");</div><div>}</div>"
What is the equivalent of pry for Javascript? (i.e. testing pieces of code on your own machine)	node<div><br /></div><div>simply type that in the terminal and it will allow you to test things in Javascript.</div>
What is the equivalent in Javascript?<div><br /></div><div>ruby my_file.rb</div>	node my_file.js
What is an asynchronous function?	It is a function that doesn't wait for a task to be done. Instead, it moves on and begins performing other tasks in the background.
What is a callback? Give an example of a callback.	A callback in Javascript is the action of passing a function (predefined or defined as an anonymous function) into another function. It is a callback because we don't run it immediately.
"Set a function to console.log(""Hello"") in 5 seconds. Do it with the ES 6 syntax."	"<div>old syntax</div><div><br /></div>global.setTimeout(function() {<div>&nbsp; &nbsp;console.log(""hello"");</div><div>}, 5000);</div><div><br /></div><div>or for the browser</div><div><br /></div><div>window.setTimeout(function() {<div>&nbsp; &nbsp;console.log(""hello"");</div><div>}, 5000);</div></div><div><br /></div><div>new syntax</div><div><br /></div><div>global.setTimeout( () => console.log(""hello""), 5000 );</div><div><br /></div><div>window.setTimeout( () => console.log(""hello""), 5000 );</div>"
"What would you add to the following to declare it over more than one line?<div><br /></div><div>global.setTimeout( () => console.log(""It has been 5 seconds""), 5000 );</div>"	"global.setTimeout( () => {<div>&nbsp; &nbsp;console.log(""It has been 5 seconds"")</div><div>}, 5000);</div>"
Make a method that prints every number from 1 to 10, excluding the numbers that are divisible by three.	let result = [];<div>for (let i = 0; i < 11; i++) {</div><div>&nbsp; &nbsp;if (i % 3) {</div><div>&nbsp; &nbsp; &nbsp; continue;</div><div>&nbsp; &nbsp;}</div><div>&nbsp; &nbsp;console.log(i);</div><div>}</div>
Make a copy of the following array:<div><br /></div><div>[1,2,3,4]</div>	[1,2,3,4].slice(0);
Find out if the following array includes the number 5:<div><br /></div><div>[1,2,3,4,5]</div>	[1,2,3,4,5].includes(5);
How would you ensure that no variables &nbsp;can be defined without the keywords var, let, or const?	"put the following at the top of your file:<div><br /></div><div>""use strict"";</div><div><br /></div><div>**Of note is that this does not work in the Node CLI or the Dev Tools.</div>"
Show the recipe for an anonymous function in Javascript that uses ES 6.	(parameters, go, here) => {<div>&nbsp; &nbsp;statements;</div><div>&nbsp; &nbsp;return value;</div><div>}</div><div><br /></div><div>**Basically this is for anonymous functions.</div>
What can you omit from an arrow function if you keep it to one line?	The function declaration and the explicit return statement. This function:<div><br /></div><div>function giveBack(name) {</div><div>&nbsp; &nbsp;return name;</div><div>}</div><div><br /></div><div>would turn into:</div><div><br /></div><div>const giveBack = name => name;</div>
Use string interpolation with Javascript.	"let name = ""Chase"";<div>console.log(`My name is ${name}.`);</div><div><br /></div><div>**Of note here is that you have to use backticks. Other than that, the only difference with Ruby is you do ${} instead of #{}.</div>"
Explain hoisting.	Hoisting happens because Javascript's variables used to be functionally scoped. This meant that if you reassigned a variable in side of a of for loop, it would reassign the variable in the entire function.<div><br /></div><div>The term hoisting here is coming from the idea that the function declaration (i.e var x, y) happens at the very top of the function declaration and then everything after that is simply a reassign. ES6 fixed this in part by giving us block scoped variables with the keywords let and const so that we don't mess up our variables by accidentally reassigning the variable in two places within the same function.</div>
Open the chrome dev tools quickly.	Option + Command + i
Explain ...	If used in a method definition, it will accept any number of arguments (ES6+). If used in an actual method call, it will take an array and do the same thing the splat operator does.
Why should you use webpack?	Normally, the browser requires you to put in all your script files in the correct order to load the necessary dependencies. This can become challenging to keep track of and adds additional loading time to your page. The solutions (or at least one of the better solutions) is webpack.<div><br /></div><div>Webpack lets you export files and require files (Javascript's version of require_relative) like you would in node. Webpack will then take all of these files and put them into one master file that will be loaded by the browser.</div>
"What is the following code doing? (i.e. webpack.config.js)&nbsp;<div><br /></div><div>module.exports = {</div><div>&nbsp; &nbsp;context: __dirname,</div><div>&nbsp; &nbsp;entry: __dirname + ""/frontend/app.js"",</div><div>&nbsp; &nbsp;output: {</div><div>&nbsp; &nbsp; &nbsp; path: __dirname + ""/app/assets/javascript"",</div><div>&nbsp; &nbsp; &nbsp; filename: ""bundle.js""</div><div>&nbsp; &nbsp;}</div><div>}</div>"	The __dirname variable is a variable that gets the current directory we're in. From there, we're specifying where the entry point of our webpack is and where our output path is (where the bundle.js file will live).
How would you prevent the form submit button from making a normal http request?	Using jquery. Inside your event, you'll do:<div><br /></div><div>event.preventDefault();</div>
What's a good way to think about callbacks?	What code would I want to execute a little later?
What will the following return?<div><br /></div><div>Dog.prototype = Object.create(Animal.prototype)</div><div>Dog.prototype.constructor = Dog</div>	A new object is created in place of the existing prototype. This object's __proto__ points to the prototype passed in to the function.
"Google Search Stuff:<div><br /></div><div>What do the following do in a google search?</div><div><br /></div><div>1. ""To be or not to be""</div><div>2. jaguar -animal</div><div>3. Christmas ~desserts</div><div>4. site:nytimes.com</div><div>5. ""come * right now * me""</div><div>6. ""Entrepreneur"" AND ""Software""</div>"	<div>1. Look for an exact word or set of words.</div><div>2. Exclude certain words from a search (i.e. the page can't have that word)</div><div>3. Include results with synonyms.</div><div>4. Search just a particular site.</div><div>5. Basically the middle is a wildcard.</div><div>6. Search for the term by both things (i.e. site needs both)</div>
What is npm?	It is two things:<div><br /></div><div>1. A collection of open source libraries that we can utilize as developers.</div><div>2. A command line interface for adding these libraries (in the form of modules which we require) to our own code.</div>
Create the default npm config file from the command line.	npm init --yes
Install react using npm. Make it so that if you run it on a different computer (i.e. your production server), the package won't be missing.	npm install --save react redux
What would you add for any packages you plan to call from the command line?	"You would add the following to the package.json file if you were doing this for webpack:<div><br /></div><div>""script"": {</div><div>&nbsp; &nbsp;""webpack"": ""webpack""</div><div>},</div><div><br /></div><div><br /></div><div>**Of note is that you should always run:</div><div><br /></div><div>npm run webpack</div><div><br /></div><div>** to avoid compatiblity issues.</div>"
What does a .gitignore file do?	This file tells git what files/folders should be ignored when something is added to github. We do this with our javascript packages because the packages themselves are very heavy and it would take a long time to upload.<div><br /></div><div>This is basically what our .gitignore file would look like:</div><div><br /></div><div>node_modules/</div><div>bundle.js</div><div>bundle.js.map</div>
What does the following do in your webpack.config.js file?<div><br /></div><div>module.exports = {</div><div>&nbsp; &nbsp;// some code here</div><div>&nbsp; &nbsp;devtool: 'source-map',</div><div>&nbsp; &nbsp;// some code here</div><div>}</div>	It makes it possible for you to see the line numbers of your original source code when errors are raised.
Add a comment inside of jsx code	{/* a comment in jsx */}
